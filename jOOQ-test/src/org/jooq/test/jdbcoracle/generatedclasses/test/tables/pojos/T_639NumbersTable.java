/**
 * This class is generated by jOOQ
 */
package org.jooq.test.jdbcoracle.generatedclasses.test.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_639NumbersTable implements org.jooq.test.jdbcoracle.generatedclasses.test.tables.interfaces.IT_639NumbersTable {

	private static final long serialVersionUID = 45849321;

	private java.math.BigDecimal id;
	private java.math.BigDecimal byte_;
	private java.math.BigDecimal short_;
	private java.math.BigDecimal integer;
	private java.math.BigDecimal long_;
	private java.math.BigDecimal byteDecimal;
	private java.math.BigDecimal shortDecimal;
	private java.math.BigDecimal integerDecimal;
	private java.math.BigDecimal longDecimal;
	private java.math.BigDecimal bigInteger;
	private java.math.BigDecimal bigDecimal;

	@Override
	public java.math.BigDecimal getId() {
		return this.id;
	}

	@Override
	public void setId(java.math.BigDecimal id) {
		this.id = id;
	}

	@Override
	public java.math.BigDecimal getByte() {
		return this.byte_;
	}

	@Override
	public void setByte(java.math.BigDecimal byte_) {
		this.byte_ = byte_;
	}

	@Override
	public java.math.BigDecimal getShort() {
		return this.short_;
	}

	@Override
	public void setShort(java.math.BigDecimal short_) {
		this.short_ = short_;
	}

	@Override
	public java.math.BigDecimal getInteger() {
		return this.integer;
	}

	@Override
	public void setInteger(java.math.BigDecimal integer) {
		this.integer = integer;
	}

	@Override
	public java.math.BigDecimal getLong() {
		return this.long_;
	}

	@Override
	public void setLong(java.math.BigDecimal long_) {
		this.long_ = long_;
	}

	@Override
	public java.math.BigDecimal getByteDecimal() {
		return this.byteDecimal;
	}

	@Override
	public void setByteDecimal(java.math.BigDecimal byteDecimal) {
		this.byteDecimal = byteDecimal;
	}

	@Override
	public java.math.BigDecimal getShortDecimal() {
		return this.shortDecimal;
	}

	@Override
	public void setShortDecimal(java.math.BigDecimal shortDecimal) {
		this.shortDecimal = shortDecimal;
	}

	@Override
	public java.math.BigDecimal getIntegerDecimal() {
		return this.integerDecimal;
	}

	@Override
	public void setIntegerDecimal(java.math.BigDecimal integerDecimal) {
		this.integerDecimal = integerDecimal;
	}

	@Override
	public java.math.BigDecimal getLongDecimal() {
		return this.longDecimal;
	}

	@Override
	public void setLongDecimal(java.math.BigDecimal longDecimal) {
		this.longDecimal = longDecimal;
	}

	@Override
	public java.math.BigDecimal getBigInteger() {
		return this.bigInteger;
	}

	@Override
	public void setBigInteger(java.math.BigDecimal bigInteger) {
		this.bigInteger = bigInteger;
	}

	@Override
	public java.math.BigDecimal getBigDecimal() {
		return this.bigDecimal;
	}

	@Override
	public void setBigDecimal(java.math.BigDecimal bigDecimal) {
		this.bigDecimal = bigDecimal;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(org.jooq.test.jdbcoracle.generatedclasses.test.tables.interfaces.IT_639NumbersTable from) {
		setId(from.getId());
		setByte(from.getByte());
		setShort(from.getShort());
		setInteger(from.getInteger());
		setLong(from.getLong());
		setByteDecimal(from.getByteDecimal());
		setShortDecimal(from.getShortDecimal());
		setIntegerDecimal(from.getIntegerDecimal());
		setLongDecimal(from.getLongDecimal());
		setBigInteger(from.getBigInteger());
		setBigDecimal(from.getBigDecimal());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends org.jooq.test.jdbcoracle.generatedclasses.test.tables.interfaces.IT_639NumbersTable> E into(E into) {
		into.from(this);
		return into;
	}
}
